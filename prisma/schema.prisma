// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  login     String
  password  String
  version   Int    @default(1)
  createdAt Float
  updatedAt Float
}

model Album {
  id         String  @id @default(uuid()) @db.Uuid
  name       String
  year       Int
  isFavorite Boolean @default(false)

  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String? @db.Uuid
  tracks   Track[]
}

model Artist {
  id         String  @id @default(uuid()) @db.Uuid
  name       String
  grammy     Boolean
  isFavorite Boolean @default(false)

  albums Album[]
  tracks Track[]
}

model Track {
  id         String  @id @default(uuid()) @db.Uuid
  name       String
  duration   Int
  isFavorite Boolean @default(false)

  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId  String? @db.Uuid
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String? @db.Uuid
}
